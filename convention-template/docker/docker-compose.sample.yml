name: "nomnom"
services:
  # services that run Django apps must depend on this service to complete successfully:
  #
  # depends_on:
  #   boot:
  #     condition: service_completed_successfully
  boot:
    image: ghcr.io/worldconvotingsystems/nomnom:main
    command: /app/docker/start.sh bootstrap
    env_file:
      - .env
    environment:
      NOM_STATIC_FILE_ROOT: /staticfiles
    volumes:
      - staticfiles:/staticfiles
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
      - redis

  nomnom:
    image: ghcr.io/worldconvotingsystems/nomnom:main
    command: /app/docker/start.sh server
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - .env
    environment:
      NOM_STATIC_FILE_ROOT: /staticfiles
    volumes:
      - staticfiles:/staticfiles:ro
    depends_on:
      boot:
        condition: service_completed_successfully
    links:
      - db
      - redis
    healthcheck:
      start_period: 30s
      start_interval: 2s
      interval: 30s
      timeout: 5s
      retries: 3
      test: curl -s --fail http://localhost:8000/watchman/ | jq --exit-status '.databases[].default.ok == true' > /dev/null

  redis:
    image: redis:7.2.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "_ping"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_interval: 1s
      start_period: 5s

  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:${NOM_DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${NOM_DB_NAME}
      - POSTGRES_USER=${NOM_DB_USER}
      - POSTGRES_PASSWORD=${NOM_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$NOM_DB_NAME"]
      start_period: 30s
      start_interval: 1s
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  worker:
    image: ghcr.io/worldconvotingsystems/nomnom:main
    command: /app/docker/start.sh worker
    restart: unless-stopped
    links:
      - db
      - redis
    env_file:
      - .env
    environment:
      NOM_STATIC_FILE_ROOT: /staticfiles
    volumes:
      - staticfiles:/staticfiles:ro
    depends_on:
      boot:
        condition: service_completed_successfully

  flower:
    image: ghcr.io/worldconvotingsystems/nomnom:main
    command: /app/docker/start.sh flower
    restart: unless-stopped
    ports:
      - "127.0.0.1:12344:5555"
    links:
      - db
      - redis
    env_file:
      - .env
    environment:
      NOM_STATIC_FILE_ROOT: /staticfiles
    volumes:
      - staticfiles:/staticfiles:ro
    depends_on:
      boot:
        condition: service_completed_successfully

  beat:
    image: ghcr.io/worldconvotingsystems/nomnom:main
    command: /app/docker/start.sh beat
    restart: unless-stopped
    links:
      - db
      - redis
    env_file:
      - .env
    environment:
      NOM_STATIC_FILE_ROOT: /staticfiles
    volumes:
      - staticfiles:/staticfiles:ro
    depends_on:
      boot:
        condition: service_completed_successfully

volumes:
  db-data:
    name: nomnom-data
    external: true
  staticfiles:

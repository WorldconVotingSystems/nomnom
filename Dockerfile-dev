# Base this on Debian Bookworm + Python 3.11
FROM python:3.11-bookworm AS os

RUN apt-get update \
  && apt-get install -y --no-install-recommends build-essential libpq-dev redis postgresql gettext curl jq \
  && rm -rf /var/lib/apt/lists/*

# Configure the application user and prepare our directories
# RUN useradd -U app_user \
#     && install -d -m 0755 -o app_user -g app_user /app \
#     && install -d -m 0755 -o app_user -g app_user /system \
#     && install -d -m 0755 -o app_user -g app_user /staticfiles

# Install just
RUN wget -qO - 'https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub' | gpg --dearmor | tee /usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg 1> /dev/null
RUN echo "deb [arch=all,$(dpkg --print-architecture) signed-by=/usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg] https://proget.makedeb.org prebuilt-mpr bookworm" |  tee /etc/apt/sources.list.d/prebuilt-mpr.list
RUN apt update
RUN apt install just

VOLUME /staticfiles

# FROM os AS build

# Ensure we create a clean install with no bytecode cruft
ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1

RUN pip install -U pip
RUN pip install pdm

WORKDIR /app

# Initialize the project virtualenv
# RUN python -mvenv venv

# # Copy the project files
# # COPY pyproject.toml pdm.lock /system/

# # install dependencies and project
# RUN . venv/bin/activate && \
#     pdm install --no-lock --no-editable --no-self

FROM os AS run

WORKDIR /app

# COPY . /app

# COPY --from=build /system /system

# RUN chown -R app_user:app_user /app/*/locale/zh/LC_MESSAGES

# USER app_user:app_user

EXPOSE 12333

# ENTRYPOINT ["/app/docker/entrypoint.sh"]
CMD ["tail", "-f", "/dev/null"]


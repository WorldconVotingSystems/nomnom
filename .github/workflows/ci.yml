---
name: CI

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1" # Make tools pretty.
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

permissions:
  contents: read

jobs:
  zizmor:
    name: Zizmor latest via Cargo
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4 # v1.11.0
        with:
          # we don't build rust, so this does nothing for us
          cache: false
      - name: Get zizmor
        run: cargo install zizmor
      - name: Run zizmor
        run: zizmor --format sarif . > results.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@6bb031afdd8eb862ea3fc1848194185e076637e5 # v3.28.11
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: zizmor

  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: hynek/build-and-inspect-python-package@b5076c307dc91924a82ad150cdd1533b444d3310 # v2.12.0
        id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  tests:
    name: Lint and Test
    runs-on: ubuntu-latest
    needs: build-package

    env:
      SETUPTOOLS_SCM_PRETEND_VERSION: "2025.0.0"
      UV_PYTHON_PREFERENCE: managed
      UV_PYTHON: "3.13"
      NOM_DB_NAME: gha_test
      NOM_DB_HOST: localhost
      NOM_DB_PORT: "52432"
      NOM_DB_USER: gha
      NOM_OAUTH_KEY: bogon
      NOM_OAUTH_SECRET: bogon
      NOM_REDIS_HOST: localhost
      NOM_EMAIL_HOST: localhost

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1

      - name: lint
        run: |
          just lint

      - name: generate some passwords
        run: |
          DB_PASSWORD=$(openssl rand -hex 8)
          SECRET_KEY=$(openssl rand -hex 16)
          echo "Run-specific DB password: $DB_PASSWORD"
          echo "Run-specific secret key: $SECRET_KEY"
          echo "NOM_DB_PASSWORD=$DB_PASSWORD" >> "$GITHUB_ENV"
          echo "NOM_SECRET_KEY=$SECRET_KEY" >> "$GITHUB_ENV"

          # slugify the python version
          CI_SERVICES_SUFFIX=$(echo ${{ matrix.python-version }} | tr '.-' '__')
          echo "COMPOSE_PROJECT_NAME=nomnom-ci-${CI_SERVICES_SUFFIX}" >> "$GITHUB_ENV"

      - name: Start the database
        run: scripts/ci/db-up.sh

      - name: Run tests
        run: |
          just test

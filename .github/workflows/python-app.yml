# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

env:
  NOM_DB_NAME: gha_test
  NOM_DB_HOST: localhost
  NOM_DB_PORT: "52432"
  NOM_DB_USER: gha
  NOM_OAUTH_KEY: bogon
  NOM_OAUTH_SECRET: bogon
  NOM_REDIS_HOST: localhost
  NOM_EMAIL_HOST: localhost

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - name: Set up uv
        run: |
          curl -LsSf https://astral.sh/uv/0.4.1/install.sh | sh

      - name: generate some passwords
        run: |
          DB_PASSWORD=$(openssl rand -hex 8)
          SECRET_KEY=$(openssl rand -hex 16)
          echo "Run-specific DB password: $DB_PASSWORD"
          echo "Run-specific secret key: $SECRET_KEY"
          echo "NOM_DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "NOM_SECRET_KEY=$SECRET_KEY" >> $GITHUB_ENV

          # fake out .env for the tests. ci/db-up.sh provides all of this, but
          # the compose file needs them
          touch .env
      - name: Start the database
        run: scripts/ci/db-up.sh

      - name: Test with pytest
        run: |
          just test
